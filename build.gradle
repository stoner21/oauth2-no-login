buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		google()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

apply plugin: 'application'
apply plugin: 'docker'

group = 'stoner21.github'
version = '1.0'
sourceCompatibility = '1.8'

jar {
	version = 1.0
}

distDocker {
	baseImage = "openjdk"
	maintainer = "harrison"
}

docker {
	baseImage 'oauth2'
	maintainer 'stoner21'
	registry ''
}


task dockerBuilder(type: Docker) {
	dependsOn build
	dockerfile = file('Dockerfile')
//	volume('/tmp')
//	addFile("${jar.baseName}-${jar.version}.jar", "app.jar")
//	entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", 'app.jar'])
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}

}

repositories {
	maven { url 'https://maven.aliyun.com/repository/public/' }
	maven { url 'https://maven.aliyun.com/repository/nexus/' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	compile('org.springframework.boot:spring-boot-starter-web')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
